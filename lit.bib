@online{rust-org,
  author  = {Community, Rust},
  url     = {https://rust-lang.org},
  date    = {2018},
  title   = {The Rust Programming Language},
  urldate = {2018-08-18},
}

@online{rust-doc,
  author  = {Community, Rust},
  url     = {https://doc.rust-lang.org/std},
  date    = {2018},
  title   = {The Rust Programming Language - Standard Library Documentation},
  urldate = {2018-08-27},
}

@online{rust-ref,
  author  = {Community, Rust},
  url     = {https://doc.rust-lang.org/reference},
  date    = {2018},
  title   = {The Rust Programming Language - The Rust Reference},
  urldate = {2018-08-27},
}

@online{rust-rfc,
  author  = {Community, Rust},
  url     = {https://github.com/rust-lang/rfcs},
  date    = {2018},
  title   = {The Rust Programming Language - Requests for Comments},
  urldate = {2018-08-27},
}

@online{rust-nom,
  author  = {Community, Rust},
  url     = {https://doc.rust-lang.org/nomicon},
  date    = {2018},
  title   = {The Rust Programming Language - Nomicon},
  urldate = {2018-09-26},
}

@online{rust-book,
  author  = {Community, Rust},
  url     = {https://doc.rust-lang.org/book/2018-edition},
  date    = {2018},
  title   = {The Rust Programming Language - Book 2018},
  urldate = {2018-08-27},
}

@online{rust-book1,
  author  = {Community, Rust},
  url     = {https://doc.rust-lang.org/book/first-edition},
  date    = {2018},
  title   = {The Rust Programming Language - Book First Edition},
  urldate = {2018-08-27},
}

@online{rust-faq,
  author  = {Community, Rust},
  url     = {https://www.rust-lang.org/en-US/faq.html},
  date    = {2018},
  title   = {Rust - Frequently Asked Questions},
  urldate = {2018-08-28},
}

@online{rust-cargo,
  author  = {Community, Rust},
  url     = {https://doc.rust-lang.org/cargo},
  date    = {2018},
  title   = {Rust - The Cargo Book},
  urldate = {2018-08-28},
}

@online{rust3,
  author  = {Turon, Aaron},
  url     = {https://blog.rust-lang.org/2018/05/15/Rust-turns-three.html},
  date    = {2018},
  title   = {Rust turns three},
  urldate = {2018-08-19},
}

@online{rust-specs,
  author  = {Schaller, Thomas},
  url     = {https://slide-rs.github.io/specs},
  date    = {2018},
  title   = {The Specs Book},
  urldate = {2018-08-28},
}

@online{rust-amethyst,
  author  = {Community, Amethyst},
  url     = {https://www.amethyst.rs/},
  date    = {2018},
  title   = {Data-driven game engine written in Rust},
  urldate = {2018-08-28},
}

@online{rust-failure,
  author  = {Community, Rust},
  url     = {https://github.com/rust-lang-nursery/failure},
  date    = {2018},
  title   = {failure - a new error management story},
  urldate = {2018-09-10},
}

@online{rust-xi,
  author  = {Levien, Raph},
  url     = {https://raphlinus.github.io/personal/2018/05/08/ecs-ui.html},
  date    = {2018},
  title   = {Entity-Component-System architecture for UI in Rust},
  urldate = {2018-08-28},
}

@online{rust-rhusics,
  author  = {R\"{o}nnberg, Simon},
  url     = {https://docs.rs/rhusics/0.2.0/rhusics/},
  date    = {2018},
  title   = {Physics library for use in Specs.},
  urldate = {2018-08-28},
}

@online{rust-graph-leipzig,
  author  = {Leipzig, Rust},
  url     = {https://rust-leipzig.github.io/architecture/2016/12/20/idiomatic-trees-in-rust/},
  date    = {2018},
  title   = {Idiomatic tree and graph like structures in Rust},
  urldate = {2018-08-28},
}

@online{rust-graph-niko,
  author  = {Matsakis, Niko},
  url     = {http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/},
  date    = {2018},
  title   = {Modeling graphs in Rust using vector indices},
  urldate = {2018-08-28},
}

@online{rust-graph-r4cpp,
  author  = {Khoffi, Ismail},
  url     = {https://github.com/nrc/r4cppp/blob/master/graphs/README.md},
  date    = {2018},
  title   = {Graphs and arena allocation},
  urldate = {2018-08-28},
}

@online{rust-graph-exyr,
  author  = {Sapin, Simon},
  url     = {https://exyr.org/2018/rust-arenas-vs-dropck/},
  date    = {2018},
  title   = {Borrow cycles in Rust: arenas v.s. drop-checking},
  urldate = {2018-08-28},
}

@online{servo,
  author  = {Mozilla},
  url     = {https://research.mozilla.org/servo-engines},
  date    = {2018},
  title   = {Servo engines written in Rust deliver memory safety and multithreading},
  urldate = {2018-08-19},
}

@online{unity,
  author  = {Unitiy},
  url     = {https://unity3d.com/learn/tutorials/topics/scripting/ecs-overview},
  date    = {2018},
  title   = {ECS Overview},
  urldate = {2018-08-28},
}

@online{so-survey,
  author  = {StackOverflow},
  url     = {https://insights.stackoverflow.com/survey/2018/},
  date    = {2018},
  title   = {StackOverflow Developer Survey Results},
  urldate = {2018-08-19},
}

@online{so-rust-file,
  author  = {fjh},
  url     = {https://stackoverflow.com/a/31503946/1935553},
  date    = {2018},
  title   = {Why is it possible to implement Read on an immutable reference to File?},
  urldate = {2018-09-16},
}

@online{skill-view,
  author  = {Felden, Timm},
  url     = {https://github.com/skill-lang/skillView},
  date    = {2018},
  title   = {Cross platform, cross language, easy-to-use serialization interface generator.},
  urldate = {2018-10-02},
}

@online{skill-repo,
  author  = {Felden, Timm},
  url     = {https://github.com/skill-lang/skill},
  date    = {2018},
  title   = {A reflection-based viewer and editor for binary skill files.},
  urldate = {2018-10-04},
}

@thesis{skill-dis,
  author    = {Felden, Timm},
  language  = {de},
  publisher = {Universit\"{a}t Stuttgart},
  url       = {http://elib.uni-stuttgart.de/handle/11682/9678},
  date      = {2018},
  doi       = {10.18419/opus-9661},
  keywords  = {004},
  title     = {\"{A}nderungstolerante Serialisierung gro\ss{}er Datens\"{a}tze f\"{u}r mehrsprachige Programmanalysen},
  type      = {phdthesis},
}

@thesis{skill-c,
  abstract     = {Die Diplomarbeit beschreibt die Entwicklung einer Sprachanbindung an die Programmiersprache C f{\"{u}}r die Serialisierungssprache SKilL, um nachzuweisen, dass die Anbindung an eine nicht objektorientierte Sprache m{\"{o}}glich ist. Im Besonderen wird die Darstellung von Daten behandelt, die in einer Vererbungshierarchie organisiert sind. Wir beschreiben die Gestaltung einer intuitiv zu bedienenden Benutzungsschnittstelle, die M{\"{o}}glichkeiten einer objektorientierten Sprache nachstellt, und veranschaulichen die Verwendung anhand von Beispielen.},
  author       = {Harth, Fabian},
  institution  = {Universit{\"{a}}t Stuttgart, Fakult{\"{a}}t Informatik, Elektrotechnik und Informationstechnik, Germany},
  language     = {Deutsch},
  url          = {http://www2.informatik.uni-stuttgart.de/cgi-bin/NCSTRL/NCSTRL_view.pl?id=DIP-3665&engl=},
  date         = {2014-11},
  howpublished = {Diplomarbeit: Universit{\"{a}}t Stuttgart, Institut f{\"{u}}r Softwaretechnologie, Programmiersprachen und {\"{U}}bersetzerbau},
  pages        = {55},
  title        = {{Plattform- und sprachunabh{\"{a}}ngige Serialisierung mit SKilL}},
  type         = {Diplomarbeit},
}

@thesis{skill-scala,
  abstract     = {Die an der Universit{\"{a}}t Stuttgart entwickelte Datenbeschreibungssprache SKilL (Serialization Killer Language) bietet eine M{\"{o}}glichkeit, gro{\ss{}}e Datenmengen sprach- und plattformunabh{\"{a}}ngig zu serialisieren. Ihre aktuelle Anbindung an die Programmiersprache Scala hat aber das Problem, dass f{\"{u}}r gro{\ss{}}e Datenmengen Geschwindigkeitseinbu{\ss{}}en durch viele Garbage Collections verursacht werden und in einigen F{\"{a}}llen sogar Speicher{\"{u}}berl{\"{a}}ufe auftreten. In dieser Arbeit werden M{\"{o}}glichkeiten untersucht, den Speicherverbrauch der Scala-Anbindung zu reduzieren. Der Speicherverbrauch der verschiedenen Implementierungen wird anschlie{\ss{}}end verglichen. Zu diesem Zweck wurde ein Testframework entwickelt, das die Erstellung von Tests vereinfacht und als Vorlage f{\"{u}}r entsprechende Tests in anderen Programmiersprachen verwendet werden kann.},
  author       = {Roth, Jonathan},
  institution  = {Universit{\"{a}}t Stuttgart, Fakult{\"{a}}t Informatik, Elektrotechnik und Informationstechnik, Germany},
  language     = {Deutsch},
  url          = {http://www2.informatik.uni-stuttgart.de/cgi-bin/NCSTRL/NCSTRL_view.pl?id=MSTR-0019&engl=0},
  date         = {2015-05},
  howpublished = {Masterarbeit: Universit{\"{a}}t Stuttgart, Institut f{\"{u}}r Softwaretechnologie, Programmiersprachen und {\"{U}}bersetzerbau},
  pages        = {82},
  title        = {{Reduktion des Speicherverbrauchs generierter SKilL-Zust{\"{a}}nde}},
  type         = {Masterarbeit},
}

@inproceedings{ecs-acc-game,
  author       = {Garcia, Franco Eus{\'{e}}bio and de Almeida Neris, V{\^{a}}nia Paula},
  organization = {Springer},
  booktitle    = {International Conference on Universal Access in Human-Computer Interaction},
  date         = {2014},
  pages        = {537--548},
  title        = {A data-driven entity-component approach to develop universally accessible games},
}

@inproceedings{ecs-hash,
  author       = {Lange, Patrick and Weller, Rene and Zachmann, Gabriel},
  organization = {IEEE},
  booktitle    = {Software Engineering and Architectures for Realtime Interactive Systems (SEARIS), 2016 IEEE 9th Workshop on},
  date         = {2016},
  pages        = {1--8},
  title        = {Wait-free hash maps in the entity-component-system pattern for realtime interactive systems},
}

@report{skill-tr,
  abstract    = {This paper presents an approach to serializing objects which is tailored for usability, performance and portability. Unlike other general serialization mechanisms, we provide explicit support for extension points in the serialized data, in order to provide a maximum of upward compatibility and extensibility.},
  author      = {Felden, Timm},
  institution = {Universit{\"{a}}t Stuttgart, Fakult{\"{a}}t Informatik, Elektrotechnik und Informationstechnik, Germany},
  language    = {Deutsch},
  location    = {Universit{\"{a}}t Stuttgart, Institut f{\"{u}}r Softwaretechnologie, Programmiersprachen und {\"{U}}bersetzerbau},
  url         = {http://www2.informatik.uni-stuttgart.de/cgi-bin/NCSTRL/NCSTRL_view.pl?id=TR-2017-01&engl=},
  date        = {2017-01},
  keywords    = {serialization; portability; intermediate representation; toolchain; change-tolerance},
  number      = {2017/01},
  pages       = {64},
  title       = {{The SKilL Language V1.0}},
  type        = {Technischer Bericht Informatik},
}

@report{skill-tr13,
  abstract    = {This paper presents an approach to serializing objects, which is tailored for usability, performance and portability. Unlike other general serialization mechanisms, we provide explicit support for extension points in the serialized data, in order to provide a maximum of upward compatibility and extensibility.},
  author      = {Felden, Timm},
  institution = {Universit{\"{a}}t Stuttgart, Fakult{\"{a}}t Informatik, Elektrotechnik und Informationstechnik, Germany},
  language    = {Englisch},
  location    = {Universit{\"{a}}t Stuttgart, Institut f{\"{u}}r Softwaretechnologie, Programmiersprachen und {\"{U}}bersetzerbau},
  url         = {http://www2.informatik.uni-stuttgart.de/cgi-bin/NCSTRL/NCSTRL_view.pl?id=TR-2013-06&engl=0},
  date        = {2013-09},
  keywords    = {serialization; portability; intermediate representation; tool chain},
  number      = {2013/06},
  pages       = {43},
  title       = {{The SKilL Language}},
  type        = {Technischer Bericht Informatik},
}

@report{cpp-iso,
  institution = {International Organization for Standardization},
  date        = {2017-11-27},
  number      = {n4713},
  title       = {{Working Draft, Standard for Programming Language C++}},
  type        = {Standard},
  volume      = {2000},
}

@article{intel64and,
  author       = {Intel, Intel},
  journaltitle = {Volume 3A: System Programming Guide, Part},
  number       = {64},
  pages        = {64},
  title        = {and IA-32 architectures software developer\textquoteright{}{}{}{}{}{}{}{}{}{}{}{}s manual},
  volume       = {1},
}

@thesis{skill-llvm,
  author      = {Pfister, Daniel},
  institution = {Universit{\"{a}}t Stuttgart, Institut f{\"{u}}r Softwaretechnologie, Programmiersprachen und {\"{U}}bersetzerbau},
  date        = {2018},
  title       = {SKilLed LLVM},
  type        = {mathesis},
}

@book{oop-inter,
  author = {Iain D. Craig MA, PhD (auth.)},
  date   = {2017},
  title  = {Object-Oriented Programming Languages: Interpretation},
  type   = {pdf},
}

@book{sfml,
  author    = {Pupius, Raimondas},
  publisher = {Packt Publishing Ltd},
  date      = {2015},
  title     = {SFML Game Development By Example},
}

@book{cpp101,
  author    = {Sutter, Herb and Alexandrescu, Andrei},
  publisher = {Pearson India},
  date      = {2004},
  title     = {C++ coding standards},
}

